module.exports = function(serialPort) {
	module = {};

	var crc = require('crc');

	var ui;

	//
	// exports
	//
	module.setUi = function(UI)
	{
		ui = UI;
	}

	module.setCookConfigMulti = function()
	{
		//var buffer = new Buffer([0xe2,0x30,0x00,0x50,0x00,0x01,0x00,0x00,0x00,0x01,0x02,0x57,0x00,0x5a,0x00,0x07,0x00,0x14,0x0f,0xa0,0x01,0x5e,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xa6,0x47,0xe5]);
		var buffer = new Buffer([0xe2 ,0x09 ,0x00 ,0x58 ,0x00 ,0x01 ,0x00, 0x04 ,0x4b ,0x67, 0xe5])
		writeSerial(buffer);
	}

	module.setStage = function(stage)
	{
		currentStage = stage;

		//need to clean all these up and use CRC calculation
		switch (stage)
		{
			case 0x00:
				var buffer = new Buffer([0xe2,0x09,0x00,0x55,0x00,0x01,0x00, 	stage, 		0x2a,0x99,		0xe5]);
				break;
			case 0x01:
				var buffer = new Buffer([0xe2,0x09,0x00,0x55,0x00,0x01,0x00, 	stage, 		0x3a,0xb8,		0xe5]);
				break;
			case 0x02:
				var buffer = new Buffer([0xe2,0x09,0x00,0x55,0x00,0x01,0x00, 	stage, 		0x0a,0xdb,		0xe5]);
				break;
			case 0x03:
				var buffer = new Buffer([0xe2,0x09,0x00,0x55,0x00,0x01,0x00, 	stage, 		0x1a,0xfa,		0xe5]);
				break;
			case 0x04:
				var buffer = new Buffer([0xe2,0x09,0x00,0x55,0x00,0x01,0x00, 	stage, 		0x6a,0x1d,		0xe5]);
				break;
			case 0x05:
				var buffer = new Buffer([0xe2,0x09,0x00,0x55,0x00,0x01,0x00, 	stage, 		0x7a,0x3c,		0xe5]);
				break;
		}
		
		writeSerial(buffer);
	}

	module.burnerStart = function()
	{
		var buffer = new Buffer([0xe2,0x09,0x00,0x51,0x00,0x01,0x00, 	0x01, 		0xb3,0xbe,		0xe5]);
		writeSerial(buffer);
	}

	module.burnerEnd = function()
	{
		var buffer = new Buffer([0xe2,0x09,0x00,0x51,0x00,0x01,0x00, 	0x00, 		0xa3,0x9f,		0xe5]);
		writeSerial(buffer);
	}

	module.cookStateOff = function()
	{
		module.burnerEnd();
		var buffer = new Buffer([0xe2,0x09,0x00,0x54,0x00,0x01,0x00, 	0x00, 		0x80, 0xc8,		0xe5]);
		writeSerial(buffer);
	}

	module.cookStateReaching = function()
	{
		module.burnerStart();
		var buffer = new Buffer([0xe2,0x09,0x00,0x54,0x00,0x01,0x00, 	0x01, 		0x90, 0xe9,		0xe5]);
		writeSerial(buffer);
	}

	module.cookStateReady = function()
	{
		module.burnerStart();
		var buffer = new Buffer([0xe2,0x09,0x00,0x54,0x00,0x01,0x00, 	0x02, 		0xa0, 0x8a,		0xe5]);
		writeSerial(buffer);
	}

	module.cookStateCooking = function()
	{
		module.burnerStart();
		var buffer = new Buffer([0xe2,0x09,0x00,0x54,0x00,0x01,0x00, 	0x03, 		0xb0,0xab,		0xe5]);
		writeSerial(buffer);
		
	}

	module.cookStateDone = function()
	{
		module.burnerStart();
		var buffer = new Buffer([0xe2,0x09,0x00,0x54,0x00,0x01,0x00, 	0x04, 		0xc0,0x4c,		0xe5]);
		writeSerial(buffer);
	}

	module.remainingHoldTime = function(time)
	{
		// var buf = new Buffer(             [0x00,0x53,0x00,0x02,0x00,    0x00,0x01]);
		// console.log(crc.crc16xmodem(buf).toString(16));
		var buffer = new Buffer([0xe2,0x0a,0x00,0x53,0x00,0x02,0x00, 	0x00,0x0a, 	0x63,0x2a,		0xe5]);
		writeSerial(buffer);
	}

	//
	// locals
	//
	function writeSerial(buffer)
	{
		ui.displayOutgoingStream(buffer);

		serialPort.write(buffer, function(err, results) {
			if (err)
			{
				console.log("ERROR writing to serial: " + err);
			}
		 });
	}

	return module;
}